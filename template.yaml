AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  Oauth2SharedGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Oauth2SharedGateway
      StageName: AppF
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "2018-06-11T16:14:04Z"
          title: "AF_SharedComp"
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Oauth2SharedLamdba.Arn}/invocations"
              responses: {}
          /{proxy+}:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Oauth2SharedLamdba.Arn}/invocations"
              responses: {}
      Variables:
        applicationWelcomePage: "...."
        applicationCallbackUrl: "...."
        applicationName: "...."
        applicationSharedSecret: "...."
        applicationScope: "...."
  Oauth2SharedLamdba:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Oauth2SharedLamdba
      Handler: index.handler
      Runtime: nodejs8.10
      Timeout: 180
      CodeUri:
        Bucket: oauth2shared
        Key: oauth2shared.zip
      Events:
        Activation:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref Oauth2SharedGateway
        Wildcard:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
            RestApiId: !Ref Oauth2SharedGateway
